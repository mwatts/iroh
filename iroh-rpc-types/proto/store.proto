syntax = "proto3";

package store;

import "google/protobuf/empty.proto";

service Store {
  rpc Version(google.protobuf.Empty) returns (VersionResponse) {}
  rpc Put(PutRequest) returns (google.protobuf.Empty) {}
  rpc PutMany(PutManyRequest) returns (google.protobuf.Empty) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Has(HasRequest) returns (HasResponse) {}
  rpc GetLinks(GetLinksRequest) returns(GetLinksResponse) {}
  rpc GetSize(GetSizeRequest) returns (GetSizeResponse) {}
  rpc ListMounts(ListMountsRequest) returns(ListMountsResponse) {}
  rpc GetMount(GetMountRequest) returns(GetMountResponse) {}
  rpc PutMount(Mount) returns(google.protobuf.Empty) {}
}

message VersionResponse {
  string version = 1;
}

// this should really be a stream
// but that would require a rewrite of the proxy! macro
message PutManyRequest {
  repeated PutRequest blocks = 1;
}

message PutRequest {
  // Serialized CID of the given block.
  bytes cid = 1;
  // bytes of data
  bytes blob = 2;
  // list of CIDs
  repeated bytes links = 3;
}

message GetRequest {
  // Serialized CID of the requested block.
  bytes cid = 1;
}

message HasRequest {
  // Serialized CID of the requested block.
  bytes cid = 1;
}

message HasResponse {
  bool has = 1;
}

message GetResponse {
  // bytes of data
  optional bytes data = 1;
}

message GetLinksRequest {
  // Serialized root CID of the requested links.
  bytes cid = 1;
}

message GetLinksResponse {
  // list of CIDs
  repeated bytes links = 1;
}

message GetSizeRequest {
  // Serialized CID of the requested block.
  bytes cid = 1;
}

message GetSizeResponse {
  optional uint64 size = 1;
}

message Mount {
  bytes name = 1;
  bytes cid = 2;
  optional bytes key = 3;
  optional bytes private_name = 4;
}

message ListMountsRequest {
  optional int64 limit = 1;
}

message ListMountsResponse {
  repeated Mount mounts = 1;
}

message GetMountRequest {
  bytes name = 1;
}

message GetMountResponse {
  optional Mount mount = 1;
}